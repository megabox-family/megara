import { getCommandName } from '../utils/text-commands.js'
import {
  checkIfRoomOrTextChannel,
  createVoiceChannel,
  deleteDynamicVoiceChannel,
} from '../utils/voice.js'
import { getChannelType } from '../repositories/channels.js'
import { GuildChannel } from 'discord.js'

const command = getCommandName(import.meta.url)

export default async function (interaction, commandSymbol) {
  if (commandSymbol) {
    interaction.reply(
      `The \`!voice\` command has been converted to a slash command, please use \`/voice\` instead.`
    )

    return
  }

  const guild = interaction.guild,
    channel = interaction.channel,
    channelType = await getChannelType(channel.id)

  if (
    [`archived`, `hidden`, `voice`].includes(channelType) ||
    [`GUILD_PUBLIC_THREAD`, `GUILD_PRIVATE_THREAD`].includes(channel.type)
  ) {
    interaction.reply({
      content: `Sorry, the \`/${command}\` command cannot be used in threads and some other channel types 😔`,
      ephemeral: true,
    })

    return
  }

  let voiceChannelName

  switch (channel.name) {
    case `rooms`:
      voiceChannelName = `room-1`
      break
    case `unverified-rooms`:
      voiceChannelName = `unverified-room-1`
      break
    default:
      voiceChannelName = `${channel.name}-1`
  }

  const voiceChannel = await createVoiceChannel(channel, voiceChannelName)

  if (!voiceChannel) {
    let voiceChannel = guild.channels.cache.find(
      channel => channel.name === voiceChannelName
    )

    interaction.reply({
      content: `The **${voiceChannel}** voice channel already exists 🤔`,
      ephemeral: true,
    })

    return
  }

  const voiceChannelType = await checkIfRoomOrTextChannel(
    voiceChannel.name,
    guild.id
  )

  interaction.reply({
    content: `\
      \nThe **${voiceChannel}** voice channel has been created, have fun 😁\

      \n*Note that if no one joins a voice channel generated by \`/${command}\` within 30 seconds of creation it will be automatically deleted.*
    `,
    ephemeral: true,
  })

  setTimeout(
    () => deleteDynamicVoiceChannel(voiceChannel, voiceChannelType),
    30000
  )
}
