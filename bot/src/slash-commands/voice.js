import { ChannelType } from 'discord.js'
import { checkType } from '../utils/channels.js'
import {
  checkIfRoomOrTextChannel,
  createVoiceChannel,
  deleteDynamicVoiceChannel,
  getChannelNumber,
  queueDelayedVoiceDelete,
} from '../utils/voice.js'
import { getChannelType } from '../repositories/channels.js'

export const description = `Opens a voice channel in relation to the current text channel.`
export const dmPermission = false,
  defaultMemberPermissions = `0`

export default async function (interaction) {
  const guild = interaction.guild,
    channel = interaction.channel,
    channelNumber = getChannelNumber(channel.name)

  if (channelNumber) {
    await interaction.reply({
      content: `Sorry, this command cannot be used in a dynamic thread or dynamic voice channel üòî`,
      ephemeral: true,
    })

    return
  }

  const channelType = checkType(channel),
    isEphemeral = channelType === `public thread` ? false : true

  await interaction.deferReply({ ephemeral: isEphemeral })

  if ([`archived`, `hidden`, `voice`, `private thread`].includes(channelType)) {
    await interaction.editReply({
      content: `Sorry, this command cannot be used in private threads and some other channel types üòî`,
    })

    return
  }

  let voiceChannelName

  switch (channel.name) {
    case `rooms`:
      voiceChannelName = `room-1`
      break
    case `unverified-rooms`:
      voiceChannelName = `unverified-room-1`
      break
    default:
      if (channelType === `public thread`) voiceChannelName = `${channel.name}`
      else voiceChannelName = `${channel.name}-1`
  }

  const voiceChannel = await createVoiceChannel(channel, voiceChannelName)

  if (!voiceChannel) {
    let voiceChannel = guild.channels.cache.find(
      channel =>
        channel.name === voiceChannelName &&
        channel.type === ChannelType.GuildVoice
    )

    await interaction.editReply({
      content: `The **${voiceChannel}** voice channel already exists ü§î`,
    })

    return
  }

  const voiceChannelType = await checkIfRoomOrTextChannel(voiceChannel, guild)

  await interaction.editReply({
    content: `\
      \nThe **${voiceChannel}** voice channel has been created, have fun üòÅ\

      \n*Note that if no one joins a voice channel generated by this command within 30 seconds of creation it will be automatically deleted.*
    `,
  })

  queueDelayedVoiceDelete(voiceChannel, voiceChannelType)
}
